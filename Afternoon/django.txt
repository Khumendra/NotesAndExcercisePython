Django:
    https://www.djangoproject.com/

- The web framework for perfectionists with deadlines.
- Django makes it easier to build better Web apps more quickly and with less code.

Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design. 
Built by experienced developers, it takes care of much of the hassle of Web development,so you can focus on
writing your app without needing to reinvent the wheel. It’s free and open source.


what is web application:
    - Sports
    - shops 
    - ecommerece
    - gym
    - hospital 
    - erp 
    - real estate 


Ridiculously fast.
    - Django was designed to help developers take applications from concept to completion as quickly as possible.

Reassuringly secure.
    - Django takes security seriously and helps developers avoid many common security mistakes.

Exceedingly scalable.
    - Some of the busiest sites on the Web leverage Django’s ability to quickly and flexibly scale

Fully loaded.
    - Django includes dozens of extras you can use to handle common Web development tasks. Django takes care of user authentication,
    content administration, site maps, RSS feeds, and many more tasks — right out of the box.


Create Django Project:
    - virtualenv for oup app/Project
    - django Project (mysite)

- virtualenv for oup app/Project:
    - virtualenv myenv
        or
    - python3 -m venv myenv

    - requirements.txt      ( pip install -r requirements.txt)
    - activate env
            myenv\Scripts\activate
                or 
            myenv\Scripts\activate.bat
    
    - Install django
        pip install django==2.2
    
    - verify the version of django
        django-admin --version
    
    - create a django project:
        django-admin startproject PyShop

        - PyShop/:(outer folder)
        
            - PyShop/:
                - __init__.py: consider this folder as a package
                - settings.py: whole settings of your project
                - urls.py: routing
                - wsgi.py: web server getway interface (deployment related)

            - manage.py: It manages the entire project.

    - Run the project
        python manage.py runserver 
        
        - you will get this 
             http://127.0.0.1:8000/
            - Now open your browser and paste the above url/ip address 
                or
            - http://localhost:8000/
            note:
                 8000(port number): it helps to identify your application/project.

Creating Application:
    - django-admin startapp products
        or
    - python manage.py startapp products


    - Add app to project :
        - open settings.py file 

        - INSTALLED_APPS = [
            ....
            products.apps.ProductsConfig,
        ]



write your first hello world!:
    - create a proj and the app  
    - add your app to the proj
    - open your views.py file and write the logic.
    
    # views.py:
        from django.http import HttpResponse

        def home(request):
            return HttpResponse("Hello World!")
    
    # urls.py:
        from django.urls import path
        from products import views

        urlpatterns = [
            path('admin/', admin.site.urls),
            path('', views.home, name='home')

        ]

    # open the terminal and run the server
        - python manage.py runserver 
        - copy the ip address and paste in the browser.


# adding template dir/folder 
    # create proj and app
    #  and add the app inside the project 
In project:

# settings.py 
    INSTALLED_APPS = [
        'my_product.apps.MyProductConfig',
        ]

    TEMPLATES = [
                    {
                        
                        'DIRS': [os.path.join(BASE_DIR, 'templates')]
                    
                    },
                ]   
In app:

# views.py
    from django.shortcuts import render

    def home(request):
        return render(request, "index.html")

In Template:
    - index.html